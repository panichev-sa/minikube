apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-app
  namespace: test
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx-app
  template:
    metadata:
      labels:
        app: nginx-app
    spec:
      containers:

      - name: nginx-app
        image: nginx:1.23.4
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/nginx-status.conf
          name: nginx-status-conf
          readOnly: true
          subPath: nginx.status.conf

      - name: nginx-prometheus-exporter
        image: nginx/nginx-prometheus-exporter
        args:
          - '-nginx.scrape-uri=http://localhost:8090/nginx_status'
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - name: nginx-ex-port
            containerPort: 9113
            protocol: TCP
      
      volumes:
      - configMap:
          defaultMode: 420
          name: nginx-status-conf
        name: nginx-status-conf

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-app-service
  namespace: test
spec:
  selector:
    app: nginx-app
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: http
  - port: 9113
    protocol: TCP
    targetPort: 9113
    name: metrics
  #type: NodePort
  type: ClusterIP

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-status-conf
  namespace: test
data:
  nginx.status.conf: |
    server {
        listen       8090 default_server;
        location /nginx_status {
            stub_status;
            access_log off;
        }
    }
